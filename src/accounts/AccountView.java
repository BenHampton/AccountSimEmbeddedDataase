/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package accounts;

import business.Accounts;
import business.Checking;
import business.MoneyMarket;
import business.Savings;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.NumberFormat;
import java.util.ArrayList;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
//import org.apache.derby.drda.NetworkServerControl;

/**
 *
 * @author Ben Hampton
 */
public class AccountView extends javax.swing.JFrame {
    /**
     * Creates new form AccountView
     */
    //private String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    //private String URL ="jdbc:derby://localhost:1527/AcctDB"; //sqlURL
    //private String user = "sqlhampton";
    //private String password = "sesame";
    
//    private String URL ="jdbc:derby:AccountDB;create=true";//Enbedded URL
//    private String driver = "org.apache.derby.jdbc.EmbeddedDriver";//Enbedded URL
//    private String user = "bhampton";//Enbedded URL
//    private String password = "sesame";//Enbedded URL
    
    private String URL ="jdbc:sqlite:AccountEmbeddedDB.sqlite";//sqlite URL
    private String driver = "org.sqlite.JDBC";//sqlite URL
    
    Accounts a;
    Statement s;
    private String acctno, dtype, pwd, userName, nm, acctID;
    private JLabel jlbl;
    private JTextField jtxt;
    private NumberFormat curr = NumberFormat.getCurrencyInstance();
    
    public AccountView() {
        initComponents();
        setInputLine(false);
        setAddAccountMnu(false);
        setUpdateAccount(false);
        setAccountAction(false);
//        try{
//            NetworkServerControl server = new NetworkServerControl(InetAddress.getLocalHost(), 1527);
//            server.start(null);
//        } catch (Exception ex) {
//            statusMessageLabel.setText("Server Erros: " + ex.getMessage());
//        }
        try{            
            Class.forName(driver).newInstance();
            Connection conn = DriverManager.getConnection(URL);
            s = conn.createStatement();
            if(!conn.isClosed()){
                statusMessageLabel.setText("Open File to Proceed  -  Connected: " + conn.getClass());
            }else{ 
                statusMessageLabel.setText("NOT Connected: " + conn.getClass());
            }
        }catch(Exception e){
            statusMessageLabel.setText("Connection Error: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jlblStartVal1 = new javax.swing.JLabel();
        jtxtDisplayName = new javax.swing.JTextField();
        jlblStartVal2 = new javax.swing.JLabel();
        jtxtAcctNo = new javax.swing.JTextField();
        jlblStartVal3 = new javax.swing.JLabel();
        jtxtAcctTypeDesc = new javax.swing.JTextField();
        jlblStartVal4 = new javax.swing.JLabel();
        jtxtBalance = new javax.swing.JTextField();
        jtxtAcctTypeCd = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtxtAcctUnm = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtxtID = new javax.swing.JTextField();
        jlblTypeCd = new javax.swing.JLabel();
        jtxtTypeCd = new javax.swing.JTextField();
        jlblAcctNm = new javax.swing.JLabel();
        jtxtAcctNm = new javax.swing.JTextField();
        jlblStartVal = new javax.swing.JLabel();
        jtxtStartVal = new javax.swing.JTextField();
        jbtnCreate = new javax.swing.JButton();
        jbtnCancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtxtChgAmt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtxtChgDesc = new javax.swing.JTextField();
        jbtnChg = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jtxtPmt = new javax.swing.JTextField();
        jbtnPmt = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jtxtRate = new javax.swing.JTextField();
        jbtnIntTrans = new javax.swing.JButton();
        jbtnLog = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusPanel = new javax.swing.JPanel();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmnuExisting = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jmnuCK = new javax.swing.JMenuItem();
        jmnuSV = new javax.swing.JMenuItem();
        jmnuMM = new javax.swing.JMenuItem();
        jmnuAddAcct = new javax.swing.JMenu();
        jmnuAddCK = new javax.swing.JMenuItem();
        jmnuAddSV = new javax.swing.JMenuItem();
        jmnuAddMM = new javax.swing.JMenuItem();
        jmnuUpdate = new javax.swing.JMenuItem();
        JmnuViewAcctTypes = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jmunDelete = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jlblStartVal1.setFont(new java.awt.Font("Tahoma 11 12 12", 1, 12)); // NOI18N
        jlblStartVal1.setText("Account Name:");

        jtxtDisplayName.setEditable(false);

        jlblStartVal2.setFont(new java.awt.Font("Tahoma 11 12 12 12", 1, 12)); // NOI18N
        jlblStartVal2.setText("Account #:");

        jtxtAcctNo.setEditable(false);

        jlblStartVal3.setFont(new java.awt.Font("Tahoma 11 12 12 12 12", 1, 12)); // NOI18N
        jlblStartVal3.setText("Type:");
        jlblStartVal3.setToolTipText("");

        jtxtAcctTypeDesc.setEditable(false);

        jlblStartVal4.setFont(new java.awt.Font("Tahoma 11 12 12 12 12 12", 1, 12)); // NOI18N
        jlblStartVal4.setText("Balance:");
        jlblStartVal4.setToolTipText("");

        jtxtBalance.setEditable(false);
        jtxtBalance.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jtxtAcctTypeCd.setEditable(false);

        jLabel5.setText("UserName:");

        jtxtAcctUnm.setEditable(false);
        jtxtAcctUnm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtAcctUnmActionPerformed(evt);
            }
        });

        jLabel6.setText("Account ID");

        jtxtID.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jlblStartVal2)
                        .addGap(17, 17, 17)
                        .addComponent(jtxtAcctNo, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlblStartVal3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtAcctTypeCd, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jtxtAcctTypeDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlblStartVal1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(jtxtDisplayName, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jlblStartVal4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtxtAcctUnm, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblStartVal1)
                    .addComponent(jtxtDisplayName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jtxtAcctUnm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtAcctNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblStartVal2)
                    .addComponent(jlblStartVal3)
                    .addComponent(jtxtAcctTypeDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblStartVal4)
                    .addComponent(jtxtBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtAcctTypeCd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jlblTypeCd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlblTypeCd.setText("Type:");

        jtxtTypeCd.setEditable(false);
        jtxtTypeCd.setBackground(new java.awt.Color(255, 255, 255));

        jlblAcctNm.setFont(new java.awt.Font("Tahoma 11", 1, 12)); // NOI18N
        jlblAcctNm.setText("Acct Nm:");

        jlblStartVal.setFont(new java.awt.Font("Tahoma 11 12", 1, 12)); // NOI18N
        jlblStartVal.setText("Start Value:");

        jbtnCreate.setText("Create");
        jbtnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCreateActionPerformed(evt);
            }
        });

        jbtnCancel.setText("Cancel");
        jbtnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Charge Amt:");

        jtxtChgAmt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel2.setFont(new java.awt.Font("Tahoma 11", 1, 12)); // NOI18N
        jLabel2.setText("Desc:");

        jbtnChg.setText("Charge");
        jbtnChg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnChgActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma 11", 1, 12)); // NOI18N
        jLabel3.setText("Payment:");

        jtxtPmt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jbtnPmt.setText("Payment");
        jbtnPmt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPmtActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma 11 12", 1, 12)); // NOI18N
        jLabel4.setText("Int. Rate:");

        jtxtRate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jbtnIntTrans.setText("Interest Trans.");
        jbtnIntTrans.setToolTipText("");
        jbtnIntTrans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnIntTransActionPerformed(evt);
            }
        });

        jbtnLog.setText("Display History");
        jbtnLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnLogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtChgAmt, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtPmt, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtRate, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnPmt)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jtxtChgDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnChg))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jbtnIntTrans)
                        .addGap(124, 124, 124)
                        .addComponent(jbtnLog)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtChgAmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtChgDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnChg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtPmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnPmt))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnIntTrans)
                    .addComponent(jbtnLog))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 674, Short.MAX_VALUE)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jlblTypeCd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtTypeCd, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jlblAcctNm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtAcctNm, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlblStartVal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtStartVal, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnCreate)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnCancel))
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 22, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jlblTypeCd)
                        .addComponent(jtxtTypeCd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbtnCancel)
                        .addComponent(jbtnCreate)
                        .addComponent(jlblAcctNm)
                        .addComponent(jtxtAcctNm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlblStartVal)
                        .addComponent(jtxtStartVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progressBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusPanelSeparator, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenu1.setText("File");

        jmnuExisting.setText("Open Exsisting Account");
        jmnuExisting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnuExistingActionPerformed(evt);
            }
        });
        jMenu1.add(jmnuExisting);

        jMenu3.setText("Create Account");

        jmnuCK.setText("Checking Account");
        jmnuCK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnuCKActionPerformed(evt);
            }
        });
        jMenu3.add(jmnuCK);

        jmnuSV.setText("Saving Account");
        jmnuSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnuSVActionPerformed(evt);
            }
        });
        jMenu3.add(jmnuSV);

        jmnuMM.setText("Money Market");
        jmnuMM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnuMMActionPerformed(evt);
            }
        });
        jMenu3.add(jmnuMM);

        jMenu1.add(jMenu3);

        jmnuAddAcct.setText("Add Additional Account");
        jmnuAddAcct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnuAddAcctActionPerformed(evt);
            }
        });

        jmnuAddCK.setText("Add Checking Account");
        jmnuAddCK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnuAddCKActionPerformed(evt);
            }
        });
        jmnuAddAcct.add(jmnuAddCK);

        jmnuAddSV.setText("Add Saving Account");
        jmnuAddSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnuAddSVActionPerformed(evt);
            }
        });
        jmnuAddAcct.add(jmnuAddSV);

        jmnuAddMM.setText("Add Money Markey Account");
        jmnuAddAcct.add(jmnuAddMM);

        jMenu1.add(jmnuAddAcct);

        jmnuUpdate.setText("Update Account ");
        jmnuUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnuUpdateActionPerformed(evt);
            }
        });
        jMenu1.add(jmnuUpdate);

        JmnuViewAcctTypes.setText("View Account Types");
        jMenu1.add(JmnuViewAcctTypes);

        jMenu4.setText("Delete Account");

        jmunDelete.setText("Delete Account");
        jmunDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmunDeleteActionPerformed(evt);
            }
        });
        jMenu4.add(jmunDelete);

        jMenu1.add(jMenu4);

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCreateActionPerformed
        //create button
        double sbal;
        if(jtxtAcctNm.getText().isEmpty()){
            statusMessageLabel.setText("Error: Empty Account Name");
            jtxtChgDesc.setText("");
            jtxtAcctNm.requestFocusInWindow();
            return;
        }
        try{
            sbal = Double.parseDouble(jtxtStartVal.getText());
        }catch(NumberFormatException e){
            statusMessageLabel.setText("Illegal/Missing Start Value");
            jtxtStartVal.requestFocusInWindow();
            return;
        }
        // CreateNewAccount: AssestAccounts(String nm, double startbal, String psswd, String dtype)
        // AddAccount:  AssetAccounts(int acctid, String nm, double startval, String passwd, String dtype)
        switch(jtxtTypeCd.getText()){
            case Savings.TYPECD:
                if(jtxtID.getText().isEmpty()){
                    a = new Savings(jtxtAcctNm.getText(), sbal, this.pwd, jtxtTypeCd.getText());
                }else{
                    a = new Savings(Integer.parseInt(jtxtID.getText()), jtxtAcctNm.getText(), sbal, this.pwd, jtxtTypeCd.getText());
                }
                break;
            case Checking.TYPECD:
                if(jtxtID.getText().isEmpty()){
                    a = new Checking(jtxtAcctNm.getText(), sbal, this.pwd, jtxtTypeCd.getText());
                }else{
                    a = new Checking(Integer.parseInt(jtxtID.getText()), jtxtAcctNm.getText(), sbal, this.pwd, jtxtTypeCd.getText());
                }
                break;
            case MoneyMarket.TYPECD:
                if(jtxtID.getText().isEmpty()){
                    a = new MoneyMarket(jtxtAcctNm.getText(), sbal, this.pwd, jtxtTypeCd.getText());
                }else{
                    a = new MoneyMarket(Integer.parseInt(jtxtID.getText()), jtxtAcctNm.getText(), sbal, this.pwd, jtxtTypeCd.getText());
                }
                break;
        }
        NumberFormat curr = NumberFormat.getCurrencyInstance();
        
        statusMessageLabel.setText(a.getActionMsg());
        jtxtID.setText(Integer.toString(a.getAcctID()));
        jtxtAcctTypeDesc.setText(a.getTypeDesc());
        jtxtDisplayName.setText(a.getName());
        jtxtAcctNo.setText(Integer.toString(a.getAcctNo()));
        jtxtAcctTypeCd.setText(a.getTypeCd());
        jtxtBalance.setText(curr.format(a.getBalance()));
        jtxtAcctUnm.setText(a.getUserName());
        setInputLine(false);
        setAddAccountMnu(true);
        setUpdateAccount(true);
        setAccountAction(true);
        jtxtChgAmt.requestFocusInWindow();
       
    }//GEN-LAST:event_jbtnCreateActionPerformed

    private void jbtnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelActionPerformed
        setInputLine(false);
    }//GEN-LAST:event_jbtnCancelActionPerformed

    private void jbtnChgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnChgActionPerformed
        statusMessageLabel.setText("");
        double chrg;
        String desc;
        if(jtxtChgDesc.getText().isEmpty()){
            statusMessageLabel.setText("Error: Charge Description is empty");
            jtxtChgDesc.setText("");
            jtxtChgDesc.requestFocusInWindow();
            return;
        }else{
            desc = jtxtChgDesc.getText();
        }
        try{
            chrg = Double.parseDouble(jtxtChgAmt.getText());
            a.setCharge(chrg, desc);
            if(a.getErrMsg().isEmpty()){
                jtxtBalance.setText(curr.format(a.getBalance()));
                jtxtChgAmt.setText("");
                jtxtChgDesc.setText("");
                jtxtChgAmt.requestFocusInWindow();
                statusMessageLabel.setText(a.getActionMsg());
            }else{
                jtxtChgAmt.setText("");
                jtxtChgDesc.setText("");
                jtxtChgAmt.requestFocusInWindow();
                statusMessageLabel.setText(a.getErrMsg());
            }            
        }catch(NumberFormatException e){
            statusMessageLabel.setText("Error: " + e.getMessage());
            jtxtChgAmt.requestFocusInWindow();
            return;
        }

    }//GEN-LAST:event_jbtnChgActionPerformed

    private void jbtnPmtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPmtActionPerformed
        statusMessageLabel.setText("");
        Double pmt;
        try{
            pmt = Double.parseDouble(jtxtPmt.getText());
            a.setPayment(pmt);
            if(a.getErrMsg().isEmpty()){
                statusMessageLabel.setText(a.getActionMsg());
                jtxtBalance.setText(curr.format(a.getBalance()));
            }else{
                statusMessageLabel.setText(a.getErrMsg());
            }
            jtxtPmt.setText("");
        }catch(NumberFormatException e){
            statusMessageLabel.setText("Invaild payment type");
        }
    }//GEN-LAST:event_jbtnPmtActionPerformed

    private void jbtnIntTransActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnIntTransActionPerformed
        statusMessageLabel.setText("");
        double ir;
        if(jtxtRate.getText().isEmpty()){
            statusMessageLabel.setText("Interest Rate is empty");
            jtxtRate.setText("");
            jtxtRate.requestFocusInWindow();
        }
        try{
            ir = Double.parseDouble(jtxtRate.getText());
            a.setInterest(ir);
            if(a.getErrMsg().isEmpty()){
                statusMessageLabel.setText(a.getActionMsg());
                jtxtBalance.setText(curr.format(a.getBalance()));
            }else{
                statusMessageLabel.setText(a.getErrMsg());
            }
        }catch(NumberFormatException e){
            statusMessageLabel.setText("Error: " + e.getMessage());
        }
        jtxtRate.setText("");
    }//GEN-LAST:event_jbtnIntTransActionPerformed

    private void jbtnLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnLogActionPerformed
        statusMessageLabel.setText("");
        ArrayList<String> list = a.getLog();
        if(!a.getErrMsg().isEmpty()){
            statusMessageLabel.setText(a.getErrMsg());
            return;
        }else{
            statusMessageLabel.setText(a.getActionMsg());
        }        
        JTextArea t = new JTextArea();
        
        for(int i = 0; i < list.size(); i ++){
            t.append(list.get(i) + "\n");
        }
        JScrollPane sp = new JScrollPane(t);
        JDialog dg = new JDialog();
        dg.add(sp);
        dg.setTitle(a.getTypeDesc() + " " + a.getAcctNo() + " " + " history");
        dg.setBounds(150,400,600,300);
        dg.setVisible(true);
    }//GEN-LAST:event_jbtnLogActionPerformed

    private void jmnuCKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnuCKActionPerformed
        // menu item for checking account
        statusMessageLabel.setText("");
        String type = "Create New Account";
        this.pwd="";
        jtxtTypeCd.setText(Checking.TYPECD);
        getUnmPwd(type);
        //if Closed or getUnmPWd noGood clear jtxtTypeCd
    }//GEN-LAST:event_jmnuCKActionPerformed
  
    private void jmnuMMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnuMMActionPerformed
        // Menu Item for Money Market
        statusMessageLabel.setText("");
        this.pwd = "";
        String type = "Create New Account";
        jtxtTypeCd.setText(MoneyMarket.TYPECD);
        getUnmPwd(type);
        //if Closed or getUnmPWd noGood clear jtxtTypeCd
    }//GEN-LAST:event_jmnuMMActionPerformed

    private void jmnuSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnuSVActionPerformed
        // Menu item for Saving Account
        statusMessageLabel.setText("");
        this.pwd = "";
        String type = "Create New Account";
        jtxtTypeCd.setText(Savings.TYPECD);
        getUnmPwd(type);
        //if Closed or getUnmPWd noGood clear jtxtTypeCd
    }//GEN-LAST:event_jmnuSVActionPerformed

    private void jmnuExistingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnuExistingActionPerformed
        /* Menu Item opens Existing AccountDB in Database
        -Connect to database
        -ask user for NAME and PASSWORD
        -execute query for all acctNo
        -get acctno, dtype AND password -  sending as parameters to construtor
        -IF acctno == password on acct GOOD 
        -ELSE BAD 
        */
        statusMessageLabel.setText("");
        setInputLine(false); 
        
        //instanciate f=JFrame, jd=JDialog(f), panel=JPanel
        JFrame frame = new JFrame();
        JDialog jd = new JDialog(frame);
        JPanel panel = new JPanel();
        //set property position with FlowLayout()
        panel.setLayout(new FlowLayout());
        //instanciate jtxt and jlbl
        JLabel jlblUname = new JLabel("Enter UserName:", 10);
        JTextField jtxtUname = new JTextField(10);
        JLabel jlblTryPwd = new JLabel("Enter Password:", 10);
        JTextField jtxtTryPwd = new JTextField(10);
        JButton jbtnOpenExisting = new JButton("Open Account");
        //add all jlbl and jtxt to panel
        panel.add(jlblUname);
        panel.add(jtxtUname);
        panel.add(jlblTryPwd);
        panel.add(jtxtTryPwd);
        panel.add(jbtnOpenExisting);
        //add panel to JDailog
        jd.add(panel);
        //           x-y-width-height
        jd.setBounds(2, 2, 800, 350);
        jd.setLocationRelativeTo(null);
        jd.setVisible(true);
        
        //jbtn actionListiner
        jbtnOpenExisting.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                //(t) Temp Vars
                String tUnm, uName="", tTryPwd, pwd="", emsg="";
                //set text from fields
                tUnm = jtxtUname.getText().trim();
                tTryPwd = jtxtTryPwd.getText().trim();
                //validate tUnm if empty
                if(tUnm.equals("")){
                    jtxtUname.setText("");
                    jtxtTryPwd.setText("");
                    jtxtUname.requestFocusInWindow();
                    JOptionPane.showMessageDialog(rootPane, "Empty UserName");
                    return;
                }else if(tTryPwd.equals("")){
                    jtxtTryPwd.setText("");
                    jtxtTryPwd.requestFocusInWindow();
                    JOptionPane.showMessageDialog(rootPane, "Empty Password");
                    return;
                }
                //Vaildate USERNAME
                try{
                    String sql = "SELECT UserName FROM Account";
                    ResultSet rs = s.executeQuery(sql);
                    //Initulize ArrayList
                    ArrayList<String> unmList = new ArrayList<>();
                    while(rs.next()){
                        unmList.add(rs.getString("UserName"));
                    }//end of while
                    for(String u : unmList){
                        if(tUnm.equals(u)){
                            //set input UsetName to UserName
                            uName = tUnm;
                            setUserName(uName);
                        }
                    }//end of for loop
                    if(uName.isEmpty()){
                        jtxtUname.setText("");
                        jtxtTryPwd.setText("");
                        jtxtUname.requestFocusInWindow();
                        JOptionPane.showMessageDialog(rootPane, "Invaild UserName:  " + tUnm);
                        return;
                    }
                    rs.close();
                }catch(Exception s){
                    emsg = "Error Processing UserName: " + s.getMessage(); 
                    return;
                }//end of try-catch for Validating UserName
                
                //Validate Password
                try{
                    String pSql = "SELECT Password "
                                + "FROM Account "
                                + "WHERE UserName = '"+getUserName()+"'";
                    ResultSet pRs = s.executeQuery(pSql);
                    if(pRs.next()){
                        pwd = pRs.getString("Password");
                        if(tTryPwd.equals(pwd)){
                            setPwd(pwd);
                        }else{
                            pwd = "";
                            jtxtTryPwd.setText("");
                            jtxtTryPwd.requestFocusInWindow();
                            JOptionPane.showMessageDialog(rootPane, "Invalid Password for UserName: " + uName);
                            return;
                        }
                    }
                    pRs.close();
                }catch(Exception s){
                    emsg = "Error Processing Password: " + s.getMessage();
                    return;
                }//end of try-catch for Validation Password
                
                //retrive account information based on UserName and Password
                try{
                    String iSql = "SELECT AccountID, AccountNumber, AccountType, Admin "
                                + "FROM Account "
                                + "WHERE UserName = '"+uName+"' "
                                + "AND Password = '"+pwd+"'";
                    ResultSet iRs = s.executeQuery(iSql);
                    if(iRs.next()){
                        setAcctID(iRs.getString("AccountID"));
                        setAcctNo(iRs.getString("AccountNumber"));
                        setDtype(dtype = iRs.getString("AccountType"));
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "Invalid AcctInfo");
                        return;
                    }  
                    iRs.close();
                }catch(Exception s){
                    emsg = "Error Retreiving Account Information: " + s.getMessage();
                    return;
                }//end of try-catch for Retreiving Account Information
                //switch to initilize object
                switch(dtype){
                        case Checking.TYPECD:
                            a = new Checking(getAcctNo());
                            break;
                        case Savings.TYPECD:
                            a = new Savings(getAcctNo());
                            break;
                        case MoneyMarket.TYPECD:
                            a = new MoneyMarket(getAcctNo());
                            break;
                }
                //if NO EMSG 
                if(emsg.isEmpty()){
                    jd.setVisible(false); 
                    setInputLine(false);
                }
                setAddAccountMnu(true);
                setUpdateAccount(true);
                setAccountAction(true);
                jtxtID.setText(Integer.toString(a.getAcctID()));
                jtxtAcctTypeDesc.setText(a.getTypeDesc());
                jtxtAcctTypeCd.setText(a.getTypeCd());
                jtxtAcctNo.setText(Integer.toString(a.getAcctNo()));
                jtxtDisplayName.setText(a.getName());
                jtxtBalance.setText(curr.format(a.getBalance()));
                jtxtChgAmt.requestFocusInWindow();
                jtxtAcctUnm.setText(getUserName());
                statusMessageLabel.setText("Account: " + getAcctNo() + " Succsesfully opened");
            }
        });
    }//GEN-LAST:event_jmnuExistingActionPerformed

    private void jmunDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmunDeleteActionPerformed
        // DELETE ACCOUNT
        //pop up dialog for deleting account
        JFrame frame = new JFrame();
        JDialog jd = new JDialog(frame);
        JPanel panel = new JPanel();
        panel.setLayout( new FlowLayout());
        //create and initiate jlbl jtxt and jbtn
        JLabel jlblDUname = new JLabel("Enter UserName:", 10);
        JTextField jtxtDUname = new JTextField(10);
        JLabel jlblDAcctNo = new JLabel("Enter Account Number:", 10);
        JTextField jtxtDAcctNo = new JTextField(10);
        JLabel jlblDPwd = new JLabel("Enter Password:", 10);
        JTextField jtxtDPwd = new JTextField(10);
        JLabel jlblDConPwd = new JLabel("Confirm Password: ", 10);
        JTextField jtxtDConPwd = new JTextField(10);
        JButton jbtnDeleteAcct = new JButton("Delete Account");
        //add all to panel
        panel.add(jlblDUname);
        panel.add(jtxtDUname);
        panel.add(jlblDAcctNo);
        panel.add(jtxtDAcctNo);
        panel.add(jlblDPwd);
        panel.add(jtxtDPwd);
        panel.add(jlblDConPwd);
        panel.add(jtxtDConPwd);
        panel.add(jbtnDeleteAcct);
        //set jdialog properties
        //           x-y-width-height
        jd.setBounds(2, 2, 800, 350);
        jd.setLocationRelativeTo(null);
        jd.add(panel);
        jd.setVisible(true);
        JOptionPane.showMessageDialog(rootPane, "Enter Information For DELETING Account");
        jbtnDeleteAcct.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                //(t) Temp Vars
                String tAcctNo, tPwd, tConfirmPwd, tUnm, emsg="";
                String acctNo="", pwd, confirmPwd, uNm="";
                //set input for Account Name, Pwd and ConfirmPwd
                tUnm = jtxtDUname.getText();
                tAcctNo = jtxtDAcctNo.getText();
                tPwd = jtxtDPwd.getText();
                tConfirmPwd = jtxtDConPwd.getText();
                //Validate if UserName && AcctNo
                try{
                    String sql = "SELECT AccountNumber, UserName "
                                + "FROM Account";
                    ResultSet rs = s.executeQuery(sql);
                    //if tUnm is empty
                    if(tUnm.equals("")){
                        jtxtDUname.setText("");
                        jtxtDAcctNo.setText("");
                        jtxtDPwd.setText("");
                        jtxtDConPwd.setText("");
                        jtxtDUname.requestFocusInWindow();
                        JOptionPane.showMessageDialog(rootPane, "Invalid username: " + tUnm);
                        return;
                    }
                    //iftAcctNo is empty
                    if(tAcctNo.equals("")){
                        jtxtDUname.setText("");
                        jtxtDAcctNo.setText("");
                        jtxtDPwd.setText("");
                        jtxtDConPwd.setText("");
                        jtxtDUname.requestFocusInWindow();
                        JOptionPane.showMessageDialog(rootPane, "Invalid Account Number: " + tAcctNo);
                        return;
                    }
                    //Initilize ArrayList dbList
                    ArrayList<String> dbList = new ArrayList<>();
                    if(!rs.next()){
                        jtxtDUname.setText("");
                        jtxtDAcctNo.setText("");
                        jtxtDPwd.setText("");
                        jtxtDConPwd.setText("");
                        jtxtDUname.requestFocusInWindow();
                        JOptionPane.showMessageDialog(rootPane, "No Vaild UserName/Account Number");
                        return;
                    }                    
                    while(rs.next()){
                        dbList.add(rs.getString("UserName"));
                        dbList.add(rs.getString("AccountNumber"));
                    }//end of while
                    for(String l : dbList){
                        if(tUnm.equals(l)){
                            //set input UserName to UserName
                            uNm = tUnm;
                            setUserName(uNm);
                        }
                        if(tAcctNo.equals(l)){
                            //set input AcctNo to Acctno
                            acctNo = tAcctNo;
                            setAcctNo(acctNo);
                        }
                    }//end of for
                    rs.close();
                    if(uNm.isEmpty()){
                        jtxtDUname.setText("");
                        jtxtDAcctNo.setText("");
                        jtxtDPwd.setText("");
                        jtxtDConPwd.setText("");
                        jtxtDUname.requestFocusInWindow();
                        JOptionPane.showMessageDialog(rootPane, "Incorrect UserName: " + tUnm);
                        return;
                    }else if(acctNo.isEmpty()){
                        jtxtDUname.setText("");
                        jtxtDAcctNo.setText("");
                        jtxtDPwd.setText("");
                        jtxtDConPwd.setText("");
                        jtxtDUname.requestFocusInWindow();
                        JOptionPane.showMessageDialog(rootPane, "Incorrect Account Name: " + tAcctNo);
                        return;
                    }else{
                        //Vaildate pwd & make sure pwd == conPwd
                        String sqlPwd = "SELECT Password "
                                        + "FROM Account "
                                        + "WHERE AccountNumber = "+tAcctNo+" "
                                        + "AND UserName = '"+getUserName()+"'";
                        if(!tPwd.equals(tConfirmPwd)){
                           jtxtDPwd.setText("");
                           jtxtDConPwd.setText("");
                           jtxtDPwd.requestFocusInWindow();
                           JOptionPane.showMessageDialog(rootPane, "Passwords DO NOT match");
                           return;
                        }else if(tPwd.equals("")){
                           jtxtDPwd.setText("");
                           jtxtDConPwd.setText("");
                           jtxtDPwd.requestFocusInWindow();
                           JOptionPane.showMessageDialog(rootPane, "Passwords is empty");
                           return;
                        }else{
                            ResultSet rsPwd = s.executeQuery(sqlPwd);
                            if(!rsPwd.next()){
                                jtxtDUname.setText("");
                                jtxtDAcctNo.setText("");
                                jtxtDPwd.setText("");
                                jtxtDConPwd.setText("");
                                jtxtDUname.requestFocusInWindow();
                                JOptionPane.showMessageDialog(rootPane, "Invalid Account");
                                return;
                            }else{
                                if(tPwd.equals(rsPwd.getString("Password"))){
                               //set password
                                setPwd(tPwd); 
                                rsPwd.close();
                                //setDtype aka Account Type
                                String sqlDtype = "select AccountType from Account where AccountNumber = "+tAcctNo;
                                ResultSet rsDtype = s.executeQuery(sqlDtype);
                                    if(rsDtype.next()){
                                    setDtype(rsDtype.getString("AccountType"));
                                    rsDtype.close();
                                    }
                                }
                            }
                        }//end of if-elseIF-else validating Password
                    }//end of if-elseIF-else validating acctno and unm are initilized
                }catch(Exception s){
                    JOptionPane.showMessageDialog(rootPane, "Error Proccesing Account: " + s.getMessage());
                    jtxtDUname.setText("");
                    jtxtDAcctNo.setText("");
                    jtxtDPwd.setText("");
                    jtxtDConPwd.setText("");
                    jtxtDUname.requestFocusInWindow();
                    return;
                }//end of try-catch
                
                //Attempt to DELETE Account
                try{
                    String sqlDELETE = "DELETE FROM Account "
                                      + "WHERE UserName = '"+getUserName()+"' "
                                      + "AND AccountNumber = "+tAcctNo+" "
                                      + "AND Password = '"+getPwd()+"'";
                    s.execute(sqlDELETE);
                    String sqlDROP = "DROP TABLE "+getDtype()+ getUserName();
                    s.execute(sqlDROP);
                    jd.setVisible(false);
                    JOptionPane.showMessageDialog(mainPanel, "Account: " + getAcctNo() +" has been deleted");
                }catch(SQLException d){
                    JOptionPane.showMessageDialog(rootPane, "Error Proccesing Account: " + d.getMessage());
                    jtxtDUname.setText("");
                    jtxtDAcctNo.setText("");
                    jtxtDPwd.setText("");
                    jtxtDConPwd.setText("");
                    jtxtDUname.requestFocusInWindow();
                    return;
                }
            }
        });
    }//GEN-LAST:event_jmunDeleteActionPerformed

    private void jtxtAcctUnmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtAcctUnmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtAcctUnmActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jmnuAddAcctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnuAddAcctActionPerformed
        // add MM account to existing user
        String type = "Add Money Market Account";
        this.pwd="";
        jtxtTypeCd.setText(MoneyMarket.TYPECD);
        getUnmPwd(type);
    }//GEN-LAST:event_jmnuAddAcctActionPerformed

    private void jmnuAddSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnuAddSVActionPerformed
        // add SV account to existing user
        String type = "Add Savings Account";
        this.pwd="";
        jtxtTypeCd.setText(Savings.TYPECD);
        getUnmPwd(type);
    }//GEN-LAST:event_jmnuAddSVActionPerformed

    private void jmnuAddCKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnuAddCKActionPerformed
        // add CK account to existing user
        String type = "Add Checking Account";
        this.pwd="";
        jtxtTypeCd.setText(Checking.TYPECD);
        getUnmPwd(type);
        
    }//GEN-LAST:event_jmnuAddCKActionPerformed

    private void jmnuUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnuUpdateActionPerformed
        // Update Acccount Button
        statusMessageLabel.setText("");
        JFrame frame = new JFrame();
        JDialog jd = new JDialog(frame);
        JPanel panel = new JPanel();
        panel.setLayout(new FlowLayout());
        
        JLabel jlblTitle = new JLabel();
        JLabel jlblNm = new JLabel("Account Name: ", 10);
        JTextField jtxtNm = new JTextField(a.getName(), 10);
        JLabel jlblPwd = new JLabel("Account Password: ", 10);
        JTextField jtxtPwd = new JTextField(a.getPwd(), 10);
        jtxtPwd.setEditable(false);
        JLabel jlblUnm = new JLabel("Account UserName: ", 10);
        JTextField jtxtUnm = new JTextField(a.getUserName(), 10);
        JLabel jlblAdmin = new JLabel("Account Admin: ", 10);
        JTextField jtxtAdmin = new JTextField(a.getAdmin(), 10);
        jtxtAdmin.setEditable(false);
        JLabel jlblType = new JLabel("Account Type: ", 10);
        JTextField jtxtType = new JTextField(a.getTypeCd(), 10);
        JButton jbtnUpdate = new JButton("Update Account");
        
        panel.add(jlblTitle);
        panel.add(jlblNm);
        panel.add(jtxtNm);
        panel.add(jlblPwd);
        panel.add(jtxtPwd);
        panel.add(jlblUnm);
        panel.add(jtxtUnm);
        panel.add(jlblAdmin);
        panel.add(jtxtAdmin);
        panel.add(jlblType);
        panel.add(jtxtType);
        panel.add(jbtnUpdate);
        
        jd.add(panel);
        jd.setBounds(2, 2, 800, 350);
        jd.setLocationRelativeTo(null);
        jd.add(panel);
        jd.setVisible(true);
        
        jbtnUpdate.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                String name, uname, adm, p;
                name = jtxtNm.getText();
                p = jtxtPwd.getText();
                adm = jtxtAdmin.getText();
                uname = jtxtUnm.getText();
                if(name.isEmpty()){
                    JOptionPane.showMessageDialog(rootPane, "Name is empty");
                    return;
                }else if(uname.isEmpty()){
                    JOptionPane.showMessageDialog(rootPane, "UserName is empty");
                    return;
                }else if(adm.isEmpty()){
                    JOptionPane.showMessageDialog(rootPane, "Admin is required");
                    return;
                }else if(p.isEmpty()){
                    JOptionPane.showMessageDialog(rootPane, "Password is empty");
                    return;
                }else{
                    a.setUpdate(name, uname, adm, p);
                    if(!a.getErrMsg().isEmpty()){
                        JOptionPane.showMessageDialog(rootPane, a.getErrMsg());
                        return;
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "Account Updated");
                        jtxtNm.setText(a.getName());
                        jtxtPwd.setText(a.getPwd());
                        jtxtAdmin.setText(a.getAdmin());
                        jtxtUnm.setText(a.getUserName());
                        statusMessageLabel.setText(a.getActionMsg());
                        jtxtDisplayName.setText(a.getName());
                        jtxtAcctUnm.setText(a.getUserName());
                    }
                }
            }
        });
    }//GEN-LAST:event_jmnuUpdateActionPerformed

    private void setInputLine(boolean tf){
        jlblTypeCd.setVisible(tf);
        jtxtTypeCd.setVisible(tf);
        jtxtAcctNm.setVisible(tf);
        jlblAcctNm.setVisible(tf);
        jlblStartVal.setVisible(tf);
        jtxtStartVal.setVisible(tf);
        jbtnCreate.setVisible(tf);
        jbtnCancel.setVisible(tf);
    }
    
    private void setAddAccountMnu(boolean tf){
        jmnuAddAcct.setVisible(tf);
        jmnuAddCK.setVisible(tf);
        jmnuAddSV.setVisible(tf);
        jmnuAddMM.setVisible(tf);
        JmnuViewAcctTypes.setVisible(tf);
    }
    
    private void setAccountAction(boolean tf){
        jtxtChgAmt.setEditable(tf);
        jtxtPmt.setEditable(tf);
        jtxtRate.setEditable(tf);
        jtxtChgDesc.setEditable(tf);
        jbtnChg.setEnabled(tf);
        jbtnPmt.setEnabled(tf);
        jbtnIntTrans.setEnabled(tf);
        jbtnLog.setEnabled(tf);
    }
    
    private void setUpdateAccount(boolean tf){
        jmnuUpdate.setVisible(tf);
    }
    private void getUnmPwd(String type){
        String add = type.substring(0, 3);
        //jDialog that prompts user for Fname and Lname ALONG with password
        JPanel pan = new JPanel();
        pan.setLayout(new FlowLayout());       
        JLabel jlblFnm = new JLabel("Enter First Name:", 10);
        JTextField jtxtFnm = new JTextField(10);
        JLabel jlblLnm = new JLabel("Enter Last Name:", 10);
        JTextField jtxtLnm = new JTextField(10);
        JLabel jlblPwd = new JLabel("Enter Password:", 10);
        JTextField jtxtPwd = new JTextField(10);
        JLabel jlblConPwd = new JLabel("Confirm Password: ", 10);
        JTextField jtxtConPwd = new JTextField(10);
        JButton jbtnNewAcct = new JButton(type);
        
        
        JFrame f = new JFrame();
        JDialog jd = new JDialog(f);
        pan.add(jlblFnm);
        pan.add(jtxtFnm);
        pan.add(jlblLnm);
        pan.add(jtxtLnm);
        pan.add(jlblPwd);
        pan.add(jtxtPwd);
        pan.add(jlblConPwd);
        pan.add(jtxtConPwd);
        pan.add(jbtnNewAcct);
        jd.add(pan);
        //           x-y-width-height
        jd.setBounds(2, 2, 800, 350);
        jd.setTitle(type);
        jd.setLocationRelativeTo(null);
        jd.setVisible(true);
        
         //jbtn actionListiner
         jbtnNewAcct.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                //(t) Temp Vars
                String tFnm, tLnm, tPwd, tConfirmPwd, action;
                //set GUI globals with user input for Fname, Lname
                tFnm = jtxtFnm.getText().trim();
                tLnm = jtxtLnm.getText().trim();
                tPwd= jtxtPwd.getText().trim();
                action = jd.getTitle().substring(0, 3);
                tConfirmPwd = jtxtConPwd.getText().trim();
                if(tFnm.isEmpty() || tLnm.isEmpty()){
                    jtxtFnm.setText("");
                    jtxtLnm.setText("");
                    jtxtPwd.setText("");
                    jtxtConPwd.setText("");
                    JOptionPane.showMessageDialog(rootPane, "First Name or Last Name is empty");
                    return;
                }
                //Vaildate pwd & make sure pwd == conPwd
              if(!tPwd.equals(tConfirmPwd)){
                   jtxtPwd.setText("");
                   jtxtConPwd.setText("");
                   JOptionPane.showMessageDialog(rootPane, "Passwords DO NOT Match");
                   return;
                }else if(tPwd.equals("")){
                   jtxtPwd.setText("");
                   jtxtConPwd.setText("");
                   jtxtPwd.requestFocusInWindow();
                   JOptionPane.showMessageDialog(rootPane, "Password is empty");
                   return;
                }else{
                  setPwd(tPwd);
                  jd.setVisible(false);
                  //after Fname, Lname, Password is accepted
                  //(String nm, double startbal, String dtype, String psswd)
                  setInputLine(true);
                  jtxtAcctNm.setText(tFnm+" " +tLnm);
                  jlblStartVal.setText("Initial Deposit");
                  jtxtStartVal.setText("");
                  jtxtAcctTypeDesc.setText("");
                  jtxtAcctTypeCd.setText("");
                  jtxtAcctNo.setText("");
                  jtxtDisplayName.setText("");
                  jtxtBalance.setText("");
                  jtxtAcctUnm.setText("");
                  if(!action.equals("Add")){
                      jtxtID.setText("");
                  }
                  jtxtStartVal.setEnabled(true);
                  jtxtStartVal.requestFocusInWindow();
              }
            }
        });
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccountView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccountView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccountView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccountView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AccountView().setVisible(true);
            }
        });
    }
    //GETTER & SETTER for global: pwd
    public void setPwd(String p){
        this.pwd = p;
    }
    public String getPwd(){
        return this.pwd;
    }  
    public void setUserName(String unm){
        this.userName = unm;
    }
    public String getUserName(){
        return this.userName;
    }
    public void setAcctNo(String acctnum){
        this.acctno = acctnum;
    }
    public String getAcctNo(){
        return this.acctno;
    }
    public void setDtype(String dtype){
        this.dtype = dtype;
    }
    public String getDtype(){
        return this.dtype;
    }
    
    public String getAcctID(){
        return this.acctID;
    }
    
    public String setAcctID(String acctid){
        return this.acctID = acctid;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu JmnuViewAcctTypes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jbtnCancel;
    private javax.swing.JButton jbtnChg;
    private javax.swing.JButton jbtnCreate;
    private javax.swing.JButton jbtnIntTrans;
    private javax.swing.JButton jbtnLog;
    private javax.swing.JButton jbtnPmt;
    private javax.swing.JLabel jlblAcctNm;
    private javax.swing.JLabel jlblStartVal;
    private javax.swing.JLabel jlblStartVal1;
    private javax.swing.JLabel jlblStartVal2;
    private javax.swing.JLabel jlblStartVal3;
    private javax.swing.JLabel jlblStartVal4;
    private javax.swing.JLabel jlblTypeCd;
    private javax.swing.JMenu jmnuAddAcct;
    private javax.swing.JMenuItem jmnuAddCK;
    private javax.swing.JMenuItem jmnuAddMM;
    private javax.swing.JMenuItem jmnuAddSV;
    private javax.swing.JMenuItem jmnuCK;
    private javax.swing.JMenuItem jmnuExisting;
    private javax.swing.JMenuItem jmnuMM;
    private javax.swing.JMenuItem jmnuSV;
    private javax.swing.JMenuItem jmnuUpdate;
    private javax.swing.JMenuItem jmunDelete;
    private javax.swing.JTextField jtxtAcctNm;
    private javax.swing.JTextField jtxtAcctNo;
    private javax.swing.JTextField jtxtAcctTypeCd;
    private javax.swing.JTextField jtxtAcctTypeDesc;
    private javax.swing.JTextField jtxtAcctUnm;
    private javax.swing.JTextField jtxtBalance;
    private javax.swing.JTextField jtxtChgAmt;
    private javax.swing.JTextField jtxtChgDesc;
    private javax.swing.JTextField jtxtDisplayName;
    private javax.swing.JTextField jtxtID;
    private javax.swing.JTextField jtxtPmt;
    private javax.swing.JTextField jtxtRate;
    private javax.swing.JTextField jtxtStartVal;
    private javax.swing.JTextField jtxtTypeCd;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables
}

